<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
   PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="ferp.dao.C1_Dao">

	<resultMap type="vo.Prod_order_stock_emp_store" id="posesRS">
		<association property="product" javaType="vo.Product">
			<result column="productName" property="productName" />
			<result column="price" property="price" />
		</association>
		<association property="prodOrder" javaType="vo.ProdOrder" >
			<result column="orderNum" property="orderNum"/>
			<result column="productNum" property="productNum"/>
			<result column="supplier" property="supplier"/>
			<result column="demander" property="demander"/>
			<result column="orderDate" property="orderDate"/>
			<result column="amount" property="amount"/>
			<result column="paymentState" property="paymentState"/>
			<result column="orderState" property="orderState"/>
		</association>
		<association property="store" javaType="vo.Store">
		<result column="frRegiNum" property="frRegiNum"/>
		<result column="frName" property="frName"/>
		</association>
		<association property="emp" javaType="vo.Emp">
		<result column="empnum" property="empnum"/>
		<result column="ename" property="ename"/>
		</association>
		<association property="stock" javaType="vo.Stock">
		<result column="remainAmount" property="remainAmount"/>
		</association>
	</resultMap>

	
<select id="r9201select" resultMap="posesRS" parameterType="prodOrder">
SELECT po.*,se.ename,se.empnum,se.frname,stck.remainamount,pd.productName FROM PRODORDER po, product pd, 
		(SELECT FRREGINUM ,FRNAME,e.empnum,ename FROM store s, emp e WHERE s.EMPNUM =e.EMPNUM) se,
		(SELECT * FROM STOCK s WHERE STOCKDATE IN (SELECT max(STOCKDATE) FROM stock GROUP BY PRODUCTNUM)) stck
WHERE po.DEMANDER = se.FRREGINUM AND pd.PRODUCTNUM =po.PRODUCTNUM AND stck.productNum = po.PRODUCTNUM 
	AND 
	<if test="orderDate!='' and orderDate!=null">TRUNC(orderdate) = to_date(#{orderDate,jdbcType=VARCHAR},'YYYY-MM-DD')</if> --일별
	<if test="orderDateMonth!='' and orderDateMonth!=null"> TRUNC(orderdate,'month') = TRUNC(to_date(#{orderDateMonth,jdbcType=VARCHAR},'YYYY-MM'),'month')</if>--월별
	<if test="orderNum!='' and orderNum!=null">ORDERNUM LIKE '%'||#{orderNum,jdbcType=VARCHAR}||'%'	</if>-- 발주번호
	AND (po.DEMANDER LIKE '%'||#{demander,jdbcType=VARCHAR}||'%' OR se.frname LIKE '%'||#{demander,jdbcType=VARCHAR}||'%')	-- 주문지점
	AND (se.ename LIKE '%'||#{supplier,jdbcType=VARCHAR}||'%' OR se.empNum LIKE '%'||#{supplier,jdbcType=VARCHAR}||'%')	-- 담당자
	AND (pd.PRODUCTNUM LIKE '%'||#{productNum,jdbcType=VARCHAR}||'%' OR pd.PRODUCTNAME LIKE '%'||#{productNum,jdbcType=VARCHAR}||'%') --상품번호 또는 이름
	AND po.PAYMENTSTATE LIKE '%'||#{paymentState,jdbcType=VARCHAR}||'%' AND po.ORDERSTATE LIKE '%'||#{orderState,jdbcType=VARCHAR}||'%'
ORDER BY po.ORDERDATE asc
</select>

<update id="r9203updateOrderState" parameterType="prodOrder">
UPDATE PRODORDER SET ORDERSTATE = #{orderStateUpdate} WHERE (ORDERNUM,PRODUCTNUM) IN
(
SELECT po.ORDERNUM,po.PRODUCTNUM FROM PRODORDER po, product pd, 
		(SELECT FRREGINUM ,FRNAME,e.empnum,ename FROM store s, emp e WHERE s.EMPNUM =e.EMPNUM) se,
		(SELECT * FROM STOCK s WHERE STOCKDATE IN (SELECT max(STOCKDATE) FROM stock GROUP BY PRODUCTNUM)) stck
	WHERE po.DEMANDER = se.FRREGINUM AND pd.PRODUCTNUM =po.PRODUCTNUM AND stck.productNum = po.PRODUCTNUM 
	AND 
	<if test="orderDate!='' and orderDate!=null">TRUNC(orderdate) = to_date(#{orderDate,jdbcType=VARCHAR},'YYYY-MM-DD')</if>
	<if test="orderDateMonth!='' and orderDateMonth!=null"> TRUNC(orderdate,'month') = TRUNC(to_date(#{orderDateMonth,jdbcType=VARCHAR},'YYYY-MM'),'month')</if>
	<if test="orderNum!='' and orderNum!=null">ORDERNUM LIKE '%'||#{orderNum,jdbcType=VARCHAR}||'%'	</if>
	AND (po.DEMANDER LIKE '%'||#{demander,jdbcType=VARCHAR}||'%' OR se.frname LIKE '%'||#{demander,jdbcType=VARCHAR}||'%')
	AND (se.ename LIKE '%'||#{supplier,jdbcType=VARCHAR}||'%' OR se.empNum LIKE '%'||#{supplier,jdbcType=VARCHAR}||'%')
	AND (pd.PRODUCTNUM LIKE '%'||#{productNum,jdbcType=VARCHAR}||'%' OR pd.PRODUCTNAME LIKE '%'||#{productNum,jdbcType=VARCHAR}||'%')
	AND po.PAYMENTSTATE LIKE '%'||#{paymentState,jdbcType=VARCHAR}||'%' AND po.ORDERSTATE LIKE '%'||#{orderState,jdbcType=VARCHAR}||'%'
)
</update>

<select id="r9310selectProdOrderPayState" resultMap="posesRS" parameterType="prodOrder">
SELECT to_char(TRUNC(ORDERDATE,'month'),'YYYY-MM') AS orderDateMonth,FRREGINUM,FRNAME, sum(AMOUNT*price) AS price, ename, po.PAYMENTSTATE
FROM prodOrder po,PRODUCT pd, (SELECT FRREGINUM ,FRNAME,e.empnum,ename FROM store s, emp e WHERE s.EMPNUM =e.EMPNUM) se
WHERE po.DEMANDER = se.FRREGINUM AND pd.PRODUCTNUM =po.PRODUCTNUM
	AND TRUNC(orderdate,'month') BETWEEN to_date(#{orderDateMonth,jdbcType=VARCHAR}, 'YYYY-MM') AND to_date(#{orderDate,jdbcType=VARCHAR}, 'YYYY-MM')
	AND (po.DEMANDER LIKE '%'||#{demander,jdbcType=VARCHAR}||'%' OR se.frname LIKE '%'||#{demander,jdbcType=VARCHAR}||'%')
	AND (se.ename LIKE '%'||#{supplier,jdbcType=VARCHAR}||'%' OR se.empNum LIKE '%'||#{supplier,jdbcType=VARCHAR}||'%')	
	AND po.PAYMENTSTATE LIKE '%'||#{paymentState,jdbcType=VARCHAR}||'%'
GROUP BY TRUNC(ORDERDATE,'month'),FRREGINUM,FRNAME,ename,po.PAYMENTSTATE
</select>

	<select id="r7100SelectAccount" resultType="account" parameterType="account">
		SELECT * FROM Account 
		where acntNum Like '%'||#{acntNum,jdbcType=VARCHAR}||'%' 
		And acntTitle LIKE '%'||#{acntTitle,jdbcType=VARCHAR}||'%'
		And acntGroup LIKE '%'||#{acntGroup,jdbcType=VARCHAR}||'%'
		and acntUsing = #{acntUsing}
	</select>
	
	<update id="r7102updateAccountUsing" parameterType="account">
	update account set acntUsing =#{acntUsing} where acntNum =#{acntNum}
	</update>

	<insert id="r7101insertAccount" parameterType="account">
		INSERT INTO ACCOUNT
		values(#{acntNum},#{acntGroup},#{acntTitle},#{acntUsing})
	</insert>

	<insert id="r7210insertStatement" parameterType="acstmt">
		INSERT INTO ACSTATEMENT VALUES(
		#{statementNum}||(SELECT nvl(substr(MAX(statementNum),3,5),1000)<if test="lineNum==0">+1</if> 
		FROM ACSTATEMENT a WHERE STMTDATE = TO_DATE(#{stmtDate},'YYYY-MM-DD')),
		#{frRegiNum},#{lineNum},TO_DATE(#{stmtDate},'YYYY-MM-DD'),
		#{acntNum},#{debit},#{credit},#{stmtOpposite,jdbcType=VARCHAR},#{remark,jdbcType=VARCHAR})
	</insert>

	<select id="r7211selectACStatement" parameterType="acstmt" resultType="acstmt">
	SELECT a.* ,CASE WHEN ii2.maxrn=ii.rronum THEN (ii.rronum*-1) ELSE ii.rronum END as rronum
	FROM ACSTATEMENT a ,
		(SELECT rownum AS rronum, a.statementNum FROM ACSTATEMENT a WHERE TO_CHAR(stmtdate,'YYYY-MM-DD') =#{stmtDate} AND FRREGINUM =#{frRegiNum} AND LINENUM =1 ORDER BY STATEMENTNUM	) ii,
		(SELECT max(rn) AS maxrn from(SELECT rownum AS rn, STATEMENTNUM FROM ACSTATEMENT WHERE TO_CHAR(stmtdate,'YYYY-MM-DD') =#{stmtDate} AND FRREGINUM =#{frRegiNum} AND LINENUM =1 ORDER BY STATEMENTNUM) )ii2
		WHERE ii.statementNum=a.STATEMENTNUM 
		AND TO_CHAR(a.stmtdate,'YYYY-MM-DD') =#{stmtDate}
		AND a.FRREGINUM =#{frRegiNum}
		AND a.STATEMENTNUM =
	<if test="statementNum==null or statementNum==''">
		(SELECT max(STATEMENTNUM) FROM ACSTATEMENT a2 
		WHERE FRREGINUM=#{frRegiNum} AND TO_CHAR(stmtdate,'YYYY-MM-DD') =#{stmtDate})
	</if>
	<if test="statementNum!=null and statementNum!=''">#{statementNum}</if>
	
	</select>
	
	
	<select id="r7211selectPrevNext" parameterType="acstmt" resultType="acstmt">
	SELECT a2.*,CASE WHEN ii2.maxrn=ii.rronum THEN (ii.rronum*-1) ELSE ii.rronum END as rronum FROM ACSTATEMENT a2, (
	SELECT rownum AS rronum, a.* 
	FROM ACSTATEMENT a 
	WHERE TO_CHAR(stmtdate,'YYYY-MM-DD') =#{stmtDate} AND FRREGINUM =#{frRegiNum} AND LINENUM =1 ORDER BY STATEMENTNUM) ii ,
	(SELECT max(rn) AS maxrn from(SELECT rownum AS rn, STATEMENTNUM FROM ACSTATEMENT WHERE TO_CHAR(stmtdate,'YYYY-MM-DD') =#{stmtDate} AND FRREGINUM =#{frRegiNum} AND LINENUM =1 ORDER BY STATEMENTNUM) )ii2
	WHERE a2.STATEMENTNUM =ii.statementNum 
	AND rronum= #{rronum}
	AND TO_CHAR(a2.stmtdate,'YYYY-MM-DD') = #{stmtDate} AND a2.FRREGINUM =#{frRegiNum}
	</select>
	
	
	
	
	
	<update id="r7212updateACStatement" parameterType="acstmt">
	UPDATE ACSTATEMENT SET acntnum= #{acntNum}, debit=#{debit}, 
	credit=#{credit},STMTOPPOSITE =#{stmtOpposite,jdbcType=VARCHAR},REMARK =#{remark,jdbcType=VARCHAR}
	WHERE STATEMENTNUM =#{statementNum} AND TO_CHAR(stmtdate,'YYYY-MM-DD') = #{stmtDate} AND lineNum=#{lineNum}
	</update>
	
	<delete id="r7213deleteACStatement" parameterType="acstmt">
	DELETE FROM ACSTATEMENT WHERE STATEMENTNUM =#{statementNum} AND TO_CHAR(stmtdate,'YYYY-MM-DD') = #{stmtDate} AND FRREGINUM =#{frRegiNum}
	</delete>
	
	
	<select id="r7204selectStatementList" parameterType="acstmt" resultType="acstmt">
	SELECT STATEMENTNUM,a.ACNTTITLE "ACNTNUM",
		CASE WHEN acntgroup='비용' THEN debit-credit 
		WHEN acntgroup='자산' THEN debit-credit
		ELSE CREDIT - debit END AS DEBIT,
	STMTOPPOSITE,TO_CHAR(STMTDATE,'YYYY-MM-DD') "STMTDATE", REMARK 
	FROM ACSTATEMENT s , ACCOUNT a
	WHERE s.ACNTNUM = a.ACNTNUM 
	AND s.ACNTNUM LIKE '%'||#{acntNum,jdbcType=VARCHAR}||'%'
	AND (<if test="stmtOpposite=='' or stmtOpposite==null">STMTOPPOSITE IS NULL OR</if> 
	STMTOPPOSITE LIKE '%'||#{stmtOpposite,jdbcType=VARCHAR}||'%')
	AND STMTDATE BETWEEN TO_DATE(#{stmtDate},'YYYY-MM-DD') AND TO_DATE(#{stmtDate2},'YYYY-MM-DD')
	AND FRREGINUM = #{frRegiNum}
	</select>
	
	<select id="r7204selectStatementListByDate" parameterType="acstmt" resultType="acstmt">
	SELECT TO_CHAR(STMTDATE,'YYYY-MM-DD') as "STMTDATE",a.ACNTTITLE "ACNTNUM",
		sum(CASE WHEN acntgroup='비용' THEN debit-credit 
		WHEN acntgroup='자산' THEN debit-credit
		ELSE CREDIT - debit END) AS DEBIT
	FROM ACSTATEMENT s , ACCOUNT a
	WHERE s.ACNTNUM = a.ACNTNUM 
	AND s.ACNTNUM LIKE '%'||#{acntNum,jdbcType=VARCHAR}||'%'
	AND (<if test="stmtOpposite=='' or stmtOpposite==null">STMTOPPOSITE IS NULL OR</if> 
	STMTOPPOSITE LIKE '%'||#{stmtOpposite,jdbcType=VARCHAR}||'%')
	AND STMTDATE BETWEEN TO_DATE(#{stmtDate},'YYYY-MM-DD') AND TO_DATE(#{stmtDate2},'YYYY-MM-DD')
	AND FRREGINUM = #{frRegiNum}
	GROUP BY STMTDATE,a.ACNTTITLE
	</select>
	
	<select id="selectActiveStore" resultType="store">
	select * from store where frPass IS NOT NULL 
	</select>
	

</mapper>